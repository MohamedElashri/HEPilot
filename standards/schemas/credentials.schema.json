{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/MohamedElashri/HEPilot/standards/schemas/credentials.schema.json",
  "title": "Credential Store",
  "description": "Collection of authentication credentials for accessing protected data sources. This file (credentials.json) MUST NOT be committed to version control and SHOULD be added to .gitignore. The file provides a secure, centralized credential store that adapters reference via credential_id in their configuration. Supports multiple authentication methods including API keys, bearer tokens, OAuth2 client credentials, and x509 certificates. Each credential has a unique ID that is referenced from adapter_config.json, avoiding hardcoded secrets and enabling flexible credential management.",
  "type": "object",
  "properties": {
    "credentials": {
      "type": "array",
      "description": "Array of credential entries. Each entry contains authentication details for one protected resource or service.",
      "items": {
        "type": "object",
        "required": ["id", "type"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this credential. Referenced from adapter_config.json via credential_id field. SHOULD be descriptive (e.g., 'indico_cern_api', 'internal_notes_readonly')."
          },
          "type": {
            "type": "string",
            "enum": ["api_key", "bearer_token", "oauth2_client_credentials", "x509"],
            "description": "Authentication method type. Determines which additional fields are required and how the credential is used for authentication."
          },
          "description": {
            "type": "string",
            "description": "Optional human-readable description of what this credential is for and where it's used. Helps with credential management and auditing."
          }
        },
        "oneOf": [
          {
            "properties": {
              "type": { "const": "api_key" },
              "key": {
                "type": "string",
                "description": "API key value. Used in HTTP headers (typically as 'X-API-Key' or 'Authorization: ApiKey {key}') or query parameters depending on the API."
              }
            },
            "required": ["key"]
          },
          {
            "properties": {
              "type": { "const": "bearer_token" },
              "token": {
                "type": "string",
                "description": "Bearer token value. Used in Authorization header as 'Bearer {token}'. Common for JWT-based authentication and personal access tokens."
              }
            },
            "required": ["token"]
          },
          {
            "properties": {
              "type": { "const": "oauth2_client_credentials" },
              "token_url": {
                "type": "string",
                "format": "uri",
                "description": "OAuth2 token endpoint URL where access tokens are obtained. The adapter will POST client credentials to this URL to receive an access token."
              },
              "client_id": {
                "type": "string",
                "description": "OAuth2 client identifier. Used with client_secret for client credentials flow authentication."
              },
              "client_secret": {
                "type": "string",
                "description": "OAuth2 client secret. MUST be kept confidential. Used with client_id to authenticate and obtain access tokens."
              }
            },
            "required": ["token_url", "client_id", "client_secret"]
          },
          {
            "properties": {
              "type": { "const": "x509" },
              "cert_path": {
                "type": "string",
                "description": "Filesystem path to the X.509 certificate file (typically .crt or .pem). Used for mutual TLS authentication or grid certificate authentication."
              },
              "key_path": {
                "type": "string",
                "description": "Filesystem path to the private key file corresponding to the certificate. MUST be kept secure with appropriate file permissions (600 or 400)."
              }
            },
            "required": ["cert_path", "key_path"]
          }
        ]
      }
    }
  },
  "required": ["credentials"]
}
